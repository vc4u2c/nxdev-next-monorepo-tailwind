name: CI Workflow
on:
  push:
    branches:
      # Change this if your primary branch is not main
      - main

# Needed for nx-set-shas when run on the main branch
permissions: write-all

jobs:
  ci-job:
    name: CI Job
    runs-on: ubuntu-latest
    outputs:
      IAC_CHANGED: ${{ steps.check-iac-changes.outputs.src }}
      PROJECT_INVENTORY_CHANGED: ${{ steps.check-affected-projects.outputs.PROJECT_INVENTORY_CHANGED }}
      PROJECT_STORE_CHANGED: ${{ steps.check-affected-projects.outputs.PROJECT_STORE_CHANGED }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for IaC Changes
        id: check-iac-changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - './.azure/**'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # This line enables distribution
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      # - name: Distribute on Nx Cloud
      #   run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="e2e-ci"

      - name: Install Dependencies
        run: npm ci

      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps

      - name: Set Default Git identity
        run: |
          git config --global user.email "vc4u2c@gmail.com"
          git config --global user.name "github-actions[bot]"

      - name: Set SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Check for Affected Projects
        id: check-affected-projects
        run: |
          AFFECTED_PROJECTS_INVENTORY=$(npx nx show projects --affected --type app --exclude store)
          PROJECT_INVENTORY_CHANGED = $AFFECTED_PROJECTS_INVENTORY.contains('inventory')
          echo "PROJECT_INVENTORY_CHANGED=$PROJECT_INVENTORY_CHANGED" >> "$GITHUB_ENV"
          echo "PROJECT_INVENTORY_CHANGED=$PROJECT_INVENTORY_CHANGED" >> "$GITHUB_OUTPUT"
          AFFECTED_PROJECTS_STORE=$(npx nx show projects --affected --type app --exclude inventory)
          PROJECT_STORE_CHANGED = $AFFECTED_PROJECTS_STORE.contains('store')
          echo "PROJECT_STORE_CHANGED=$PROJECT_STORE_CHANGED" >> "$GITHUB_ENV"
          echo "PROJECT_STORE_CHANGED=$PROJECT_STORE_CHANGED" >> "$GITHUB_OUTPUT"
          printf '%s\n' "$PROJECT_INVENTORY_CHANGED"
          printf '%s\n' "$PROJECT_STORE_CHANGED"
          echp ${{ env. }}

      - name: Print Outputs
        run: |
          echo "IAC_CHANGED: ${{ steps.check-iac-changes.outputs.src }}"
          printf '%s\n' "$AFFECTED_PROJECTS_INVENTORY"
          printf '%s\n' "$AFFECTED_PROJECTS_STORE"
          echo "PROJECT_INVENTORY_CHANGED: ${{ steps.check-affected-projects.outputs.PROJECT_INVENTORY_CHANGED }}"
          echo "PROJECT_STORE_CHANGED: ${{ steps.check-affected-projects.outputs.PROJECT_STORE_CHANGED }}"

      # - name: Lint
      #   run: npx nx affected -t lint

      # - name: Run Unit Tests
      #   run: npx nx affected -t test

      # - name: Run E2E
      #   run: npx nx affected -t e2e

  #     - name: Build
  #       run: npx nx affected -t build

  #     - name: Upload Build Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/

  #     - name: Create release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npx nx release

  call-cd-workflow-inventory-job:
    name: Call Inventory CD Workflow Job
    runs-on: ubuntu-latest
    needs: [ci-job]
    steps:
     - run: |
        printf '%s\n' "$isInventory"
        echo ${{ needs.ci-job.outputs.IAC_CHANGED }}
        echo ${{ needs.ci-job.outputs.PROJECT_INVENTORY_CHANGED }}
        echo ${{ needs.ci-job.outputs.PROJECT_STORE_CHANGED }}


    # uses: ./.github/workflows/cd-workflow.yml
    # with:
    #   PROJECT_NAME: 'inventory'
    #   PROJECT_CHANGED: ${{ needs.ci-job.outputs.PROJECT_INVENTORY_CHANGED == true }}
    #   IAC_CHANGED: ${{ needs.ci-job.outputs.IAC_CHANGED == 'true' }}
    # secrets: inherit
    # if: ${{ needs.ci-job.outputs.IAC_CHANGED || needs.ci-job.outputs.PROJECT_INVENTORY_CHANGED }}

  # call-cd-workflow-store-job:
  #   name: Call Store CD Workflow Job
  #   needs: [ci-job]
  #   uses: ./.github/workflows/cd-workflow.yml
  #   with:
  #     PROJECT_NAME: 'store'
  #     PROJECT_CHANGED: ${{ needs.ci-job.outputs.PROJECT_STORE_CHANGED == 'true' }}
  #     IAC_CHANGED: ${{ needs.ci-job.outputs.IAC_CHANGED == 'true' }}
  #   secrets: inherit
  #   if: ${{ needs.ci-job.outputs.IAC_CHANGED || needs.ci-job.outputs.PROJECT_STORE_CHANGED }}
